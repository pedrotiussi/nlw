{"ast":null,"code":"var _jsxFileName = \"/home/pedrotiussi/Documentos/IME/estudospessoais/nlw/Web/src/pages/CreatePoint/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport axios from 'axios';\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedUF, setSelectedUF] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [selectedItems, setSelectedItems] = useState([0]);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      setUfs(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUF === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUF}/municipios`).then(response => {\n      setCities(response.data);\n    });\n  }, [selectedUF]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n\n  function handleSelectedUF(event) {\n    const uf = event.target.value;\n    setSelectedUF(uf);\n  }\n\n  function handleSelectedCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectedItem(id) {\n    const alredySelectedItem = selectedItems.findIndex(item => item === id);\n\n    if (alredySelectedItem >= 0) {\n      const filteredItems;\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 20\n    }\n  }), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }, \"Estado(UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    onChange: handleSelectedUF,\n    value: selectedUF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    value: uf.sigla,\n    key: uf.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, \" \", uf.nome, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 33\n    }\n  }, \"Selecione uma cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    value: city.nome,\n    key: city.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }, \" \", city.nome, \" \")))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, \"Selcione um ou mais \\xEDtens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectedItem(item.id),\n    className: selectedItems.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["/home/pedrotiussi/Documentos/IME/estudospessoais/nlw/Web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","FiArrowLeft","Map","TileLayer","Marker","api","axios","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","selectedUF","setSelectedUF","selectedCity","setSelectedCity","initialPosition","setInitialPosition","selectedPosition","setSelectedPosition","formData","setFormData","name","email","whatsapp","selectedItems","setSelectedItems","get","then","response","data","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","handleSelectedUF","event","uf","target","value","handleSelectedCity","city","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectedItem","id","alredySelectedItem","findIndex","item","filteredItems","logo","map","sigla","nome","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent } from 'react';\nimport {Link} from 'react-router-dom';\nimport './styles.css'; \nimport logo from '../../assets/logo.svg';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport {Map, TileLayer, Marker} from 'react-leaflet';\nimport api from '../../services/api';\nimport axios from 'axios';\nimport {LeafletMouseEvent} from 'leaflet';\n \ninterface Item {\n    id: number;\n    title: string;\n    image_url: string;\n}\n\ninterface IBGEUF {\n    id: number;\n    sigla: string;\n    nome: string;\n    regiao: {\n      id: number;\n      sigla: string;\n      nome: string;\n    }\n}\n\ninterface IBGECity {\n    id: number;\n    nome: string;\n    microrregiao: {\n        id: number;\n        nome: string;\n        mesorregiao: {\n            id: number;\n            nome: string;\n            UF: {\n                id: number;\n                sigla: string;\n                nome: string;\n                regiao: {\n                    id: number;\n                    sigla: string;\n                    nome: string;\n                }\n            }\n        }\n    }\n}\n\nconst CreatePoint = () => {\n    \n    const [items, setItems] = useState<Item[]>([]);  \n    const [ufs, setUfs] = useState <IBGEUF[]> ([]);\n    const [cities, setCities] = useState <IBGECity[]> ([]);\n    const [selectedUF, setSelectedUF] = useState ('0');\n    const [selectedCity, setSelectedCity] = useState ('0');\n    const [initialPosition, setInitialPosition] = useState <[number,number]> ([0,0]); \n    const [selectedPosition, setSelectedPosition] = useState <[number,number]> ([0,0]); \n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        whatsapp: '',\n    });\n    const [selectedItems, setSelectedItems] = useState<number []> ([0]);\n\n    useEffect(() => {\n        api.get('items').then(response => {\n            setItems(response.data);\n        });\n    }, []); \n\n    useEffect(()=>{\n        axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n            setUfs(response.data); \n        });\n    }, []);\n\n    useEffect (() => {\n        if (selectedUF === '0'){\n            return;\n        }\n        axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUF}/municipios`).then(response => {\n            setCities(response.data); \n        });\n\n    }, [selectedUF]);\n\n    useEffect (() => {\n        navigator.geolocation.getCurrentPosition (position => {\n            const {latitude, longitude} = position.coords;\n            setInitialPosition([latitude,longitude]);\n        });\n    }, []);\n\n    function handleSelectedUF (event: ChangeEvent<HTMLSelectElement>){\n        const uf = event.target.value;\n        setSelectedUF(uf);\n    }\n\n    function handleSelectedCity (event: ChangeEvent<HTMLSelectElement>){\n        const city = event.target.value;\n        setSelectedCity(city);\n    }\n\n    function handleMapClick (event: LeafletMouseEvent){\n        setSelectedPosition ([\n            event.latlng.lat,\n            event.latlng.lng\n        ]);\n\n\n    }\n\n    function handleInputChange (event: ChangeEvent<HTMLInputElement>) {\n        const {name, value} = event.target;\n        setFormData({\n            ...formData, [name]: value\n        });\n    }\n\n    function handleSelectedItem (id: number){\n        const alredySelectedItem = selectedItems.findIndex(item => item===id);\n\n        if (alredySelectedItem >= 0){\n            const filteredItems\n        }else {\n            setSelectedItems([...selectedItems, id]);   \n        } \n    }\n\n    return (\n       <div id=\"page-create-point\">\n           <header>\n               <img src={logo} alt=\"Ecoleta\"/>\n               <Link to= '/'>\n                   <FiArrowLeft />\n                   Voltar para home\n               </Link>\n            </header>\n\n            <form>\n                <h1>Cadastro do <br /> ponto de coleta</h1>\n\n                <fieldset>\n                    <legend>\n                        <h2>Dados</h2>\n                    </legend>\n\n                    <div className=\"field\">\n                        <label htmlFor=\"name\">Nome da entidade</label>\n                        <input type=\"text\" name=\"name\" id=\"name\" onChange={handleInputChange}/>\n                    </div>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"email\">E-mail</label>\n                            <input type=\"email\" name=\"email\" id=\"email\" onChange={handleInputChange}/>\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\n                            <input type=\"text\" name=\"whatsapp\" id=\"whatsapp\" onChange={handleInputChange}/>\n                        </div>\n\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <legend>\n                        <h2>Endereço</h2>\n                        <span>Selecione o endereço no mapa</span>\n                    </legend>\n\n                    <Map center={initialPosition} zoom ={15} onClick={handleMapClick} >\n                        <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n\n                        <Marker position={selectedPosition}/>\n\n                    </Map>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"uf\">Estado(UF)</label>\n                            <select name=\"uf\" id=\"uf\" onChange={handleSelectedUF} value={selectedUF}>\n                                <option value=\"0\">Selecione uma UF</option>\n                                {ufs.map(uf => (\n                                    <option value={uf.sigla} key={uf.id}> {uf.nome} </option>   \n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"city\">Cidade</label>\n                            <select name=\"city\" id=\"city\">\n                                <option value=\"0\">Selecione uma cidade</option>\n                                {cities.map(city => (\n                                    <option value={city.nome} key={city.id}> {city.nome} </option>   \n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <legend>\n                        <h2>Ítens de coleta</h2>\n                        <span>Selcione um ou mais ítens abaixo</span>\n                    </legend>\n\n                    <ul className=\"items-grid\">\n                        {items.map(item => ( \n                             <li key={item.id} onClick={ () => handleSelectedItem(item.id)} className= {selectedItems.includes(item.id)? 'selected': ''}>\n                                <img src={item.image_url} alt={item.title}/>\n                                <span>{item.title}</span>\n                            </li>\n                        ))}\n                    </ul>\n\n                </fieldset>\n\n                <button type=\"submit\">\n                    Cadastrar ponto de coleta\n                </button>\n            </form>\n           \n       </div>\n    );\n }\n \n export default CreatePoint;"]},"metadata":{},"sourceType":"module"}